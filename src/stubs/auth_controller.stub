<?php

namespace {{Namespace}};

use App\Http\Controllers\Controller;
use App\Models\{{ModelName}};
use Illuminate\Http\Request;

class {{ControllerName}} extends Controller
{
    public function login(Request $request)
    {
        $fields = $request->validate([
            'username' => 'required|string',
            'password' => 'required|string',
        ]);
        //check email
        $user = Player::where('username',$fields['username'])->first();

        //check password
        if(!$user || !Hash::check($fields['password'],$user->password)){
            return response([
                'message' => 'Bad creds',
            ],401);
        }
        if($user->status == 'lock' || $user->status == 'banned'){
            return response([
                'message' => 'Tài khoản của bạn đã bị khoá hoặc bị cấm',
            ],400);
        }
        $token = $user->createToken('mytoken_player')->plainTextToken;
        $results = [
            'player' => $user,
            'token' => $token
        ];
        return response($results,200);

    }
    public function logout(Request $request)
    {
        // dd(auth()->user()->tokens());
        auth()->user()->tokens()->delete();
        Session:flush();
        return [
            'message' => "Logged out"
        ];
    }
    public function register(Request $request)
    {
        $fields = $request->validate([
            'email' => 'required|string|unique:players',
            'password' => 'required|string',
        ]);
        $player = User::create([
            'name' => $request->name,
            'email' => $fields['email'],
            'ref_number' => $request->ref_number,
            'status' => 'unlock',
            'email' => $request->email,
            'password' => bcrypt($fields['password']),
            
        ]);
        $token = $player->createToken('mytoken_player')->plainTextToken;
        return response([
            'results' => $player,
            'token'=>$token
        ],200);
    }
    public function forgot_password(Request $request)
    {
        $fields = $request->validate([
            'username' => 'required|string',
            'password' => 'required|string',
        ]);
        $user = Player::where('username',$fields['username'])->first();
        $user->password =  bcrypt($fields['password']);
        $user->save();
        return response([
            'results' => $user,
        ],200);

    }
}
